---
openapi: 3.0.0
info:
  description: Twitter API v2 available endpoints
  version: '2.62'
  title: Twitter API v2
  termsOfService: https://developer.twitter.com/en/developer-terms/agreement-and-policy.html
  contact:
    name: Twitter Developers
    url: https://developer.twitter.com/
  license:
    name: Twitter Developer Agreement and Policy
    url: https://developer.twitter.com/en/developer-terms/agreement-and-policy.html
paths:
  "/2/lists/{id}/tweets":
    get:
      security:
        - BearerToken: []
        - OAuth2UserToken:
            - list.read
            - tweet.read
            - users.read
        - UserToken: []
      tags:
        - Tweets
      summary: List Tweets timeline by List ID.
      description: Returns a list of Tweets associated with the provided List ID.
      externalDocs:
        url: https://developer.twitter.com/en/docs/twitter-api/lists/list-tweets/api-reference/get-lists-id-tweets
      operationId: listsIdTweets
      parameters:
        - name: id
          in: path
          description: The ID of the List.
          required: true
          schema:
            "$ref": "#/components/schemas/ListId"
          style: simple
        - "$ref": "#/components/parameters/TweetFieldsParameter"
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Get2ListsIdTweetsResponse"
        default:
          description: The request has failed.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
servers:
  - description: Twitter API
    url: https://api.twitter.com
tags:
  - name: Bookmarks
    description: Endpoints related to retrieving, managing bookmarks of a user
    externalDocs:
      description: Find out more
      url: https://developer.twitter.com/en/docs/twitter-api/bookmarks
  - name: Compliance
    description: Endpoints related to keeping Twitter data in your systems compliant
    externalDocs:
      description: Find out more
      url: https://developer.twitter.com/en/docs/twitter-api/compliance/batch-tweet/introduction
  - name: Direct Messages
    description: Endpoints related to retrieving, managing Direct Messages
    externalDocs:
      description: Find out more
      url: https://developer.twitter.com/en/docs/twitter-api/direct-messages
  - name: General
    description: Miscellaneous endpoints for general API functionality
    externalDocs:
      description: Find out more
      url: https://developer.twitter.com/en/docs/twitter-api
  - name: Lists
    description: Endpoints related to retrieving, managing Lists
    externalDocs:
      description: Find out more
      url: https://developer.twitter.com/en/docs/twitter-api/lists
  - name: Spaces
    description: Endpoints related to retrieving, managing Spaces
    externalDocs:
      description: Find out more
      url: https://developer.twitter.com/en/docs/twitter-api/spaces
  - name: Tweets
    description: Endpoints related to retrieving, searching, and modifying Tweets
    externalDocs:
      description: Find out more
      url: https://developer.twitter.com/en/docs/twitter-api/tweets/lookup
  - name: Users
    description: Endpoints related to retrieving, managing relationships of Users
    externalDocs:
      description: Find out more
      url: https://developer.twitter.com/en/docs/twitter-api/users/lookup
components:
  securitySchemes:
    BearerToken:
      type: http
      scheme: bearer
    OAuth2UserToken:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://api.twitter.com/2/oauth2/authorize
          tokenUrl: https://api.twitter.com/2/oauth2/token
          scopes:
            block.read: Accounts you’ve blocked.
            block.write: Block and unblock accounts for you.
            bookmark.read: Allows an app to read bookmarked Tweets
            bookmark.write: Allows an app to create and delete bookmarks
            dm.read: All your Direct Messages
            dm.write: Send and manage Direct Messages for you
            follows.read: People who follow you and people who you follow.
            follows.write: Follow and unfollow people for you.
            like.read: Tweets you’ve liked and likes you can view.
            like.write: Like and un-like Tweets for you.
            list.read: Lists, list members, and list followers of lists you’ve created
              or are a member of, including private lists.
            list.write: Create and manage Lists for you.
            mute.read: Accounts you’ve muted.
            mute.write: Mute and unmute accounts for you.
            offline.access: App can request refresh token.
            space.read: Access all of the Spaces you can see.
            tweet.moderate.write: Hide and unhide replies to your Tweets.
            tweet.read: All the Tweets you can see, including Tweets from protected
              accounts.
            tweet.write: Tweet and retweet for you.
            users.read: Any account you can see, including protected accounts. Any
              account you can see, including protected accounts.
    UserToken:
      type: http
      scheme: OAuth
  schemas:
    AddOrDeleteRulesRequest:
      oneOf:
        - "$ref": "#/components/schemas/AddRulesRequest"
        - "$ref": "#/components/schemas/DeleteRulesRequest"
    AddOrDeleteRulesResponse:
      type: object
      description: A response from modifying user-specified stream filtering rules.
      required:
        - meta
      properties:
        data:
          type: array
          description: All user-specified stream filtering rules that were created.
          items:
            "$ref": "#/components/schemas/Rule"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        meta:
          "$ref": "#/components/schemas/RulesResponseMetadata"
    AddRulesRequest:
      type: object
      description: A request to add a user-specified stream filtering rule.
      required:
        - add
      properties:
        add:
          type: array
          items:
            "$ref": "#/components/schemas/RuleNoId"
    Aggregate:
      type: integer
      description: The sum of results returned in this response.
      format: int32
    AnimatedGif:
      allOf:
        - "$ref": "#/components/schemas/Media"
        - type: object
          properties:
            preview_image_url:
              type: string
              format: uri
            variants:
              "$ref": "#/components/schemas/Variants"
    BlockUserMutationResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            blocking:
              type: boolean
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
    BlockUserRequest:
      type: object
      required:
        - target_user_id
      properties:
        target_user_id:
          "$ref": "#/components/schemas/UserId"
    BookmarkAddRequest:
      type: object
      required:
        - tweet_id
      properties:
        tweet_id:
          "$ref": "#/components/schemas/TweetId"
    BookmarkMutationResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            bookmarked:
              type: boolean
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
    CashtagEntity:
      allOf:
        - "$ref": "#/components/schemas/EntityIndicesInclusiveExclusive"
        - "$ref": "#/components/schemas/CashtagFields"
    CashtagFields:
      type: object
      description: Represent the portion of text recognized as a Cashtag, and its
        start and end position within the text.
      required:
        - tag
      properties:
        tag:
          type: string
          example: TWTR
    ClientDisconnectedProblem:
      description: Your client has gone away.
      allOf:
        - "$ref": "#/components/schemas/Problem"
    ClientForbiddenProblem:
      description: A problem that indicates your client is forbidden from making this
        request.
      allOf:
        - "$ref": "#/components/schemas/Problem"
        - type: object
          properties:
            reason:
              type: string
              enum:
                - official-client-forbidden
                - client-not-enrolled
            registration_url:
              type: string
              format: uri
    ComplianceJob:
      type: object
      required:
        - id
        - type
        - created_at
        - upload_url
        - download_url
        - upload_expires_at
        - download_expires_at
        - status
      properties:
        created_at:
          "$ref": "#/components/schemas/CreatedAt"
        download_expires_at:
          "$ref": "#/components/schemas/DownloadExpiration"
        download_url:
          "$ref": "#/components/schemas/DownloadUrl"
        id:
          "$ref": "#/components/schemas/JobId"
        name:
          "$ref": "#/components/schemas/ComplianceJobName"
        status:
          "$ref": "#/components/schemas/ComplianceJobStatus"
        type:
          "$ref": "#/components/schemas/ComplianceJobType"
        upload_expires_at:
          "$ref": "#/components/schemas/UploadExpiration"
        upload_url:
          "$ref": "#/components/schemas/UploadUrl"
    ComplianceJobName:
      type: string
      description: User-provided name for a compliance job.
      maxLength: 64
      example: my-job
    ComplianceJobStatus:
      type: string
      description: Status of a compliance job.
      enum:
        - created
        - in_progress
        - failed
        - complete
        - expired
    ComplianceJobType:
      type: string
      description: Type of compliance job to list.
      enum:
        - tweets
        - users
    ConflictProblem:
      description: You cannot create a new job if one is already in progress.
      allOf:
        - "$ref": "#/components/schemas/Problem"
    ConnectionExceptionProblem:
      description: A problem that indicates something is wrong with the connection.
      allOf:
        - "$ref": "#/components/schemas/Problem"
        - type: object
          properties:
            connection_issue:
              type: string
              enum:
                - TooManyConnections
                - ProvisioningSubscription
                - RuleConfigurationIssue
                - RulesInvalidIssue
    ContextAnnotation:
      type: object
      description: Annotation inferred from the Tweet text.
      required:
        - domain
        - entity
      properties:
        domain:
          "$ref": "#/components/schemas/ContextAnnotationDomainFields"
        entity:
          "$ref": "#/components/schemas/ContextAnnotationEntityFields"
    ContextAnnotationDomainFields:
      type: object
      description: Represents the data for the context annotation domain.
      required:
        - id
      properties:
        description:
          type: string
          description: Description of the context annotation domain.
        id:
          type: string
          description: The unique id for a context annotation domain.
          pattern: "^[0-9]{1,19}$"
        name:
          type: string
          description: Name of the context annotation domain.
    ContextAnnotationEntityFields:
      type: object
      description: Represents the data for the context annotation entity.
      required:
        - id
      properties:
        description:
          type: string
          description: Description of the context annotation entity.
        id:
          type: string
          description: The unique id for a context annotation entity.
          pattern: "^[0-9]{1,19}$"
        name:
          type: string
          description: Name of the context annotation entity.
    CountryCode:
      type: string
      description: A two-letter ISO 3166-1 alpha-2 country code.
      pattern: "^[A-Z]{2}$"
      example: US
    CreateAttachmentsMessageRequest:
      type: object
      required:
        - attachments
      properties:
        attachments:
          "$ref": "#/components/schemas/DmAttachments"
        text:
          type: string
          description: Text of the message.
          minLength: 1
    CreateComplianceJobRequest:
      type: object
      description: A request to create a new batch compliance job.
      required:
        - type
      properties:
        name:
          "$ref": "#/components/schemas/ComplianceJobName"
        resumable:
          type: boolean
          description: If true, this endpoint will return a pre-signed URL with resumable
            uploads enabled.
        type:
          type: string
          description: Type of compliance job to list.
          enum:
            - tweets
            - users
    CreateComplianceJobResponse:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/ComplianceJob"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
    CreateDmConversationRequest:
      type: object
      required:
        - conversation_type
        - participant_ids
        - message
      properties:
        conversation_type:
          type: string
          description: The conversation type that is being created.
          enum:
            - Group
        message:
          "$ref": "#/components/schemas/CreateMessageRequest"
        participant_ids:
          "$ref": "#/components/schemas/DmParticipants"
      additionalProperties: false
    CreateDmEventResponse:
      type: object
      properties:
        data:
          type: object
          required:
            - dm_conversation_id
            - dm_event_id
          properties:
            dm_conversation_id:
              "$ref": "#/components/schemas/DmConversationId"
            dm_event_id:
              "$ref": "#/components/schemas/DmEventId"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
    CreateMessageRequest:
      anyOf:
        - "$ref": "#/components/schemas/CreateTextMessageRequest"
        - "$ref": "#/components/schemas/CreateAttachmentsMessageRequest"
    CreateTextMessageRequest:
      type: object
      required:
        - text
      properties:
        attachments:
          "$ref": "#/components/schemas/DmAttachments"
        text:
          type: string
          description: Text of the message.
          minLength: 1
    CreatedAt:
      type: string
      description: Creation time of the compliance job.
      format: date-time
      example: '2021-01-06T18:40:40.000Z'
    DeleteRulesRequest:
      type: object
      description: A response from deleting user-specified stream filtering rules.
      required:
        - delete
      properties:
        delete:
          type: object
          description: IDs and values of all deleted user-specified stream filtering
            rules.
          properties:
            ids:
              type: array
              description: IDs of all deleted user-specified stream filtering rules.
              items:
                "$ref": "#/components/schemas/RuleId"
            values:
              type: array
              description: Values of all deleted user-specified stream filtering rules.
              items:
                "$ref": "#/components/schemas/RuleValue"
    DisallowedResourceProblem:
      description: A problem that indicates that the resource requested violates the
        precepts of this API.
      allOf:
        - "$ref": "#/components/schemas/Problem"
        - type: object
          required:
            - resource_id
            - resource_type
            - section
          properties:
            resource_id:
              type: string
            resource_type:
              type: string
              enum:
                - user
                - tweet
                - media
                - list
                - space
            section:
              type: string
              enum:
                - data
                - includes
    DmAttachments:
      type: array
      description: Attachments to a DM Event.
      items:
        "$ref": "#/components/schemas/DmMediaAttachment"
    DmConversationId:
      type: string
      description: Unique identifier of a DM conversation. This can either be a numeric
        string, or a pair of numeric strings separated by a '-' character in the case
        of one-on-one DM Conversations.
      pattern: "^([0-9]{1,19}-[0-9]{1,19}|[0-9]{15,19})$"
      example: 123123123-456456456
    DmEvent:
      type: object
      required:
        - id
        - event_type
      properties:
        attachments:
          type: object
          description: Specifies the type of attachments (if any) present in this
            DM.
          properties:
            card_ids:
              type: array
              description: A list of card IDs (if cards are attached).
              minItems: 1
              items:
                type: string
            media_keys:
              type: array
              description: A list of Media Keys for each one of the media attachments
                (if media are attached).
              minItems: 1
              items:
                "$ref": "#/components/schemas/MediaKey"
        created_at:
          type: string
          format: date-time
        dm_conversation_id:
          "$ref": "#/components/schemas/DmConversationId"
        event_type:
          type: string
          example: MessageCreate
        id:
          "$ref": "#/components/schemas/DmEventId"
        participant_ids:
          type: array
          description: A list of participants for a ParticipantsJoin or ParticipantsLeave
            event_type.
          minItems: 1
          items:
            "$ref": "#/components/schemas/UserId"
        referenced_tweets:
          type: array
          description: A list of Tweets this DM refers to.
          minItems: 1
          items:
            type: object
            required:
              - id
            properties:
              id:
                "$ref": "#/components/schemas/TweetId"
        sender_id:
          "$ref": "#/components/schemas/UserId"
        text:
          type: string
    DmEventId:
      type: string
      description: Unique identifier of a DM Event.
      pattern: "^[0-9]{1,19}$"
      example: '1146654567674912769'
    DmMediaAttachment:
      type: object
      required:
        - media_id
      properties:
        media_id:
          "$ref": "#/components/schemas/MediaId"
    DmParticipants:
      type: array
      description: Participants for the DM Conversation.
      minItems: 2
      maxItems: 49
      items:
        "$ref": "#/components/schemas/UserId"
    DownloadExpiration:
      type: string
      description: Expiration time of the download URL.
      format: date-time
      example: '2021-01-06T18:40:40.000Z'
    DownloadUrl:
      type: string
      description: URL from which the user will retrieve their compliance results.
      format: uri
    DuplicateRuleProblem:
      description: The rule you have submitted is a duplicate.
      allOf:
        - "$ref": "#/components/schemas/Problem"
        - type: object
          properties:
            id:
              type: string
            value:
              type: string
    End:
      type: string
      description: The end time of the bucket.
      format: date-time
    EntityIndicesInclusiveExclusive:
      type: object
      description: Represent a boundary range (start and end index) for a recognized
        entity (for example a hashtag or a mention). `start` must be smaller than
        `end`.  The start index is inclusive, the end index is exclusive.
      required:
        - start
        - end
      properties:
        end:
          type: integer
          description: Index (zero-based) at which position this entity ends.  The
            index is exclusive.
          minimum: 0
          example: 61
        start:
          type: integer
          description: Index (zero-based) at which position this entity starts.  The
            index is inclusive.
          minimum: 0
          example: 50
    EntityIndicesInclusiveInclusive:
      type: object
      description: Represent a boundary range (start and end index) for a recognized
        entity (for example a hashtag or a mention). `start` must be smaller than
        `end`.  The start index is inclusive, the end index is inclusive.
      required:
        - start
        - end
      properties:
        end:
          type: integer
          description: Index (zero-based) at which position this entity ends.  The
            index is inclusive.
          minimum: 0
          example: 61
        start:
          type: integer
          description: Index (zero-based) at which position this entity starts.  The
            index is inclusive.
          minimum: 0
          example: 50
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Expansions:
      type: object
      properties:
        media:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Media"
        places:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Place"
        polls:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Poll"
        topics:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Topic"
        tweets:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Tweet"
        users:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/User"
    FieldUnauthorizedProblem:
      description: A problem that indicates that you are not allowed to see a particular
        field on a Tweet, User, etc.
      allOf:
        - "$ref": "#/components/schemas/Problem"
        - type: object
          required:
            - resource_type
            - field
            - section
          properties:
            field:
              type: string
            resource_type:
              type: string
              enum:
                - user
                - tweet
                - media
                - list
                - space
            section:
              type: string
              enum:
                - data
                - includes
    FilteredStreamingTweetResponse:
      type: object
      description: A Tweet or error that can be returned by the streaming Tweet API.
        The values returned with a successful streamed Tweet includes the user provided
        rules that the Tweet matched.
      properties:
        data:
          "$ref": "#/components/schemas/Tweet"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
        matching_rules:
          type: array
          description: The list of rules which matched the Tweet
          items:
            type: object
            required:
              - id
            properties:
              id:
                "$ref": "#/components/schemas/RuleId"
              tag:
                "$ref": "#/components/schemas/RuleTag"
    FullTextEntities:
      type: object
      properties:
        annotations:
          type: array
          minItems: 1
          items:
            description: Annotation for entities based on the Tweet text.
            allOf:
              - "$ref": "#/components/schemas/EntityIndicesInclusiveInclusive"
              - type: object
                description: Represents the data for the annotation.
                properties:
                  normalized_text:
                    type: string
                    description: Text used to determine annotation.
                    example: Barack Obama
                  probability:
                    type: number
                    description: Confidence factor for annotation type.
                    minimum: 0
                    maximum: 1
                    format: double
                  type:
                    type: string
                    description: Annotation type.
                    example: Person
        cashtags:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/CashtagEntity"
        hashtags:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/HashtagEntity"
        mentions:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/MentionEntity"
        urls:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/UrlEntity"
    GenericProblem:
      description: A generic problem with no additional information beyond that provided
        by the HTTP status code.
      allOf:
        - "$ref": "#/components/schemas/Problem"
    Geo:
      type: object
      required:
        - type
        - bbox
        - properties
      properties:
        bbox:
          type: array
          minItems: 4
          maxItems: 4
          items:
            type: number
            minimum: -180
            maximum: 180
            format: double
          example:
            - -105.193475
            - 39.60973
            - -105.053164
            - 39.761974
        geometry:
          "$ref": "#/components/schemas/Point"
        properties:
          type: object
        type:
          type: string
          enum:
            - Feature
    Get2ComplianceJobsIdResponse:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/ComplianceJob"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
    Get2ComplianceJobsResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/ComplianceJob"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        meta:
          type: object
          properties:
            result_count:
              "$ref": "#/components/schemas/ResultCount"
    Get2DmConversationsIdDmEventsResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/DmEvent"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
        meta:
          type: object
          properties:
            next_token:
              "$ref": "#/components/schemas/NextToken"
            previous_token:
              "$ref": "#/components/schemas/PreviousToken"
            result_count:
              "$ref": "#/components/schemas/ResultCount"
    Get2DmConversationsWithParticipantIdDmEventsResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/DmEvent"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
        meta:
          type: object
          properties:
            next_token:
              "$ref": "#/components/schemas/NextToken"
            previous_token:
              "$ref": "#/components/schemas/PreviousToken"
            result_count:
              "$ref": "#/components/schemas/ResultCount"
    Get2DmEventsResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/DmEvent"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
        meta:
          type: object
          properties:
            next_token:
              "$ref": "#/components/schemas/NextToken"
            previous_token:
              "$ref": "#/components/schemas/PreviousToken"
            result_count:
              "$ref": "#/components/schemas/ResultCount"
    Get2ListsIdFollowersResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/User"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
        meta:
          type: object
          properties:
            next_token:
              "$ref": "#/components/schemas/NextToken"
            previous_token:
              "$ref": "#/components/schemas/PreviousToken"
            result_count:
              "$ref": "#/components/schemas/ResultCount"
    Get2ListsIdMembersResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/User"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
        meta:
          type: object
          properties:
            next_token:
              "$ref": "#/components/schemas/NextToken"
            previous_token:
              "$ref": "#/components/schemas/PreviousToken"
            result_count:
              "$ref": "#/components/schemas/ResultCount"
    Get2ListsIdResponse:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/List"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
    Get2ListsIdTweetsResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Tweet"
        meta:
          type: object
          properties:
            next_token:
              "$ref": "#/components/schemas/NextToken"
            previous_token:
              "$ref": "#/components/schemas/PreviousToken"
            result_count:
              "$ref": "#/components/schemas/ResultCount"
    Get2SpacesByCreatorIdsResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Space"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
        meta:
          type: object
          properties:
            result_count:
              "$ref": "#/components/schemas/ResultCount"
    Get2SpacesIdBuyersResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/User"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
        meta:
          type: object
          properties:
            next_token:
              "$ref": "#/components/schemas/NextToken"
            previous_token:
              "$ref": "#/components/schemas/PreviousToken"
            result_count:
              "$ref": "#/components/schemas/ResultCount"
    Get2SpacesIdResponse:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/Space"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
    Get2SpacesIdTweetsResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Tweet"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
        meta:
          type: object
          properties:
            next_token:
              "$ref": "#/components/schemas/NextToken"
            previous_token:
              "$ref": "#/components/schemas/PreviousToken"
            result_count:
              "$ref": "#/components/schemas/ResultCount"
    Get2SpacesResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Space"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
    Get2SpacesSearchResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Space"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
        meta:
          type: object
          properties:
            result_count:
              "$ref": "#/components/schemas/ResultCount"
    Get2TweetsCountsAllResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/SearchCount"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        meta:
          type: object
          properties:
            newest_id:
              "$ref": "#/components/schemas/NewestId"
            next_token:
              "$ref": "#/components/schemas/NextToken"
            oldest_id:
              "$ref": "#/components/schemas/OldestId"
            total_tweet_count:
              "$ref": "#/components/schemas/Aggregate"
    Get2TweetsCountsRecentResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/SearchCount"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        meta:
          type: object
          properties:
            newest_id:
              "$ref": "#/components/schemas/NewestId"
            next_token:
              "$ref": "#/components/schemas/NextToken"
            oldest_id:
              "$ref": "#/components/schemas/OldestId"
            total_tweet_count:
              "$ref": "#/components/schemas/Aggregate"
    Get2TweetsFirehoseStreamResponse:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/Tweet"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
    Get2TweetsIdLikingUsersResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/User"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
        meta:
          type: object
          properties:
            next_token:
              "$ref": "#/components/schemas/NextToken"
            previous_token:
              "$ref": "#/components/schemas/PreviousToken"
            result_count:
              "$ref": "#/components/schemas/ResultCount"
    Get2TweetsIdQuoteTweetsResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Tweet"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
        meta:
          type: object
          properties:
            next_token:
              "$ref": "#/components/schemas/NextToken"
            result_count:
              "$ref": "#/components/schemas/ResultCount"
    Get2TweetsIdResponse:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/Tweet"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
    Get2TweetsIdRetweetedByResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/User"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
        meta:
          type: object
          properties:
            next_token:
              "$ref": "#/components/schemas/NextToken"
            previous_token:
              "$ref": "#/components/schemas/PreviousToken"
            result_count:
              "$ref": "#/components/schemas/ResultCount"
    Get2TweetsResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Tweet"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
    Get2TweetsSample10StreamResponse:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/Tweet"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
    Get2TweetsSampleStreamResponse:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/Tweet"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
    Get2TweetsSearchAllResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Tweet"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
        meta:
          type: object
          properties:
            newest_id:
              "$ref": "#/components/schemas/NewestId"
            next_token:
              "$ref": "#/components/schemas/NextToken"
            oldest_id:
              "$ref": "#/components/schemas/OldestId"
            result_count:
              "$ref": "#/components/schemas/ResultCount"
    Get2TweetsSearchRecentResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Tweet"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
        meta:
          type: object
          properties:
            newest_id:
              "$ref": "#/components/schemas/NewestId"
            next_token:
              "$ref": "#/components/schemas/NextToken"
            oldest_id:
              "$ref": "#/components/schemas/OldestId"
            result_count:
              "$ref": "#/components/schemas/ResultCount"
    Get2TweetsSearchStreamResponse:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/Tweet"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
    Get2UsersByResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/User"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
    Get2UsersByUsernameUsernameResponse:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/User"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
    Get2UsersIdBlockingResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/User"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
        meta:
          type: object
          properties:
            next_token:
              "$ref": "#/components/schemas/NextToken"
            previous_token:
              "$ref": "#/components/schemas/PreviousToken"
            result_count:
              "$ref": "#/components/schemas/ResultCount"
    Get2UsersIdBookmarksResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Tweet"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
        meta:
          type: object
          properties:
            next_token:
              "$ref": "#/components/schemas/NextToken"
            previous_token:
              "$ref": "#/components/schemas/PreviousToken"
            result_count:
              "$ref": "#/components/schemas/ResultCount"
    Get2UsersIdFollowedListsResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/List"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
        meta:
          type: object
          properties:
            next_token:
              "$ref": "#/components/schemas/NextToken"
            previous_token:
              "$ref": "#/components/schemas/PreviousToken"
            result_count:
              "$ref": "#/components/schemas/ResultCount"
    Get2UsersIdFollowersResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/User"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
        meta:
          type: object
          properties:
            next_token:
              "$ref": "#/components/schemas/NextToken"
            previous_token:
              "$ref": "#/components/schemas/PreviousToken"
            result_count:
              "$ref": "#/components/schemas/ResultCount"
    Get2UsersIdFollowingResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/User"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
        meta:
          type: object
          properties:
            next_token:
              "$ref": "#/components/schemas/NextToken"
            previous_token:
              "$ref": "#/components/schemas/PreviousToken"
            result_count:
              "$ref": "#/components/schemas/ResultCount"
    Get2UsersIdLikedTweetsResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Tweet"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
        meta:
          type: object
          properties:
            next_token:
              "$ref": "#/components/schemas/NextToken"
            previous_token:
              "$ref": "#/components/schemas/PreviousToken"
            result_count:
              "$ref": "#/components/schemas/ResultCount"
    Get2UsersIdListMembershipsResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/List"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
        meta:
          type: object
          properties:
            next_token:
              "$ref": "#/components/schemas/NextToken"
            previous_token:
              "$ref": "#/components/schemas/PreviousToken"
            result_count:
              "$ref": "#/components/schemas/ResultCount"
    Get2UsersIdMentionsResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Tweet"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
        meta:
          type: object
          properties:
            newest_id:
              "$ref": "#/components/schemas/NewestId"
            next_token:
              "$ref": "#/components/schemas/NextToken"
            oldest_id:
              "$ref": "#/components/schemas/OldestId"
            previous_token:
              "$ref": "#/components/schemas/PreviousToken"
            result_count:
              "$ref": "#/components/schemas/ResultCount"
    Get2UsersIdMutingResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/User"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
        meta:
          type: object
          properties:
            next_token:
              "$ref": "#/components/schemas/NextToken"
            previous_token:
              "$ref": "#/components/schemas/PreviousToken"
            result_count:
              "$ref": "#/components/schemas/ResultCount"
    Get2UsersIdOwnedListsResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/List"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
        meta:
          type: object
          properties:
            next_token:
              "$ref": "#/components/schemas/NextToken"
            previous_token:
              "$ref": "#/components/schemas/PreviousToken"
            result_count:
              "$ref": "#/components/schemas/ResultCount"
    Get2UsersIdPinnedListsResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/List"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
        meta:
          type: object
          properties:
            result_count:
              "$ref": "#/components/schemas/ResultCount"
    Get2UsersIdResponse:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/User"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
    Get2UsersIdTimelinesReverseChronologicalResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Tweet"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
        meta:
          type: object
          properties:
            newest_id:
              "$ref": "#/components/schemas/NewestId"
            next_token:
              "$ref": "#/components/schemas/NextToken"
            oldest_id:
              "$ref": "#/components/schemas/OldestId"
            previous_token:
              "$ref": "#/components/schemas/PreviousToken"
            result_count:
              "$ref": "#/components/schemas/ResultCount"
    Get2UsersIdTweetsResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Tweet"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
        meta:
          type: object
          properties:
            newest_id:
              "$ref": "#/components/schemas/NewestId"
            next_token:
              "$ref": "#/components/schemas/NextToken"
            oldest_id:
              "$ref": "#/components/schemas/OldestId"
            previous_token:
              "$ref": "#/components/schemas/PreviousToken"
            result_count:
              "$ref": "#/components/schemas/ResultCount"
    Get2UsersMeResponse:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/User"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
    Get2UsersResponse:
      type: object
      properties:
        data:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/User"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
    HashtagEntity:
      allOf:
        - "$ref": "#/components/schemas/EntityIndicesInclusiveExclusive"
        - "$ref": "#/components/schemas/HashtagFields"
    HashtagFields:
      type: object
      description: Represent the portion of text recognized as a Hashtag, and its
        start and end position within the text.
      required:
        - tag
      properties:
        tag:
          type: string
          description: The text of the Hashtag.
          example: MondayMotivation
    HttpStatusCode:
      type: integer
      description: HTTP Status Code.
      minimum: 100
      maximum: 599
    InvalidRequestProblem:
      description: A problem that indicates this request is invalid.
      allOf:
        - "$ref": "#/components/schemas/Problem"
        - type: object
          properties:
            errors:
              type: array
              minItems: 1
              items:
                type: object
                properties:
                  message:
                    type: string
                  parameters:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
    InvalidRuleProblem:
      description: The rule you have submitted is invalid.
      allOf:
        - "$ref": "#/components/schemas/Problem"
    JobId:
      type: string
      description: Compliance Job ID.
      pattern: "^[0-9]{1,19}$"
      example: '1372966999991541762'
    List:
      type: object
      description: A Twitter List is a curated group of accounts.
      required:
        - id
        - name
      properties:
        created_at:
          type: string
          format: date-time
        description:
          type: string
        follower_count:
          type: integer
        id:
          "$ref": "#/components/schemas/ListId"
        member_count:
          type: integer
        name:
          type: string
          description: The name of this List.
        owner_id:
          "$ref": "#/components/schemas/UserId"
        private:
          type: boolean
    ListAddUserRequest:
      type: object
      required:
        - user_id
      properties:
        user_id:
          "$ref": "#/components/schemas/UserId"
    ListCreateRequest:
      type: object
      required:
        - name
      properties:
        description:
          type: string
          minLength: 0
          maxLength: 100
        name:
          type: string
          minLength: 1
          maxLength: 25
        private:
          type: boolean
          default: false
    ListCreateResponse:
      type: object
      properties:
        data:
          type: object
          description: A Twitter List is a curated group of accounts.
          required:
            - id
            - name
          properties:
            id:
              "$ref": "#/components/schemas/ListId"
            name:
              type: string
              description: The name of this List.
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
    ListDeleteResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            deleted:
              type: boolean
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
    ListFollowedRequest:
      type: object
      required:
        - list_id
      properties:
        list_id:
          "$ref": "#/components/schemas/ListId"
    ListFollowedResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            following:
              type: boolean
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
    ListId:
      type: string
      description: The unique identifier of this List.
      pattern: "^[0-9]{1,19}$"
      example: '1146654567674912769'
    ListMutateResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            is_member:
              type: boolean
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
    ListPinnedRequest:
      type: object
      required:
        - list_id
      properties:
        list_id:
          "$ref": "#/components/schemas/ListId"
    ListPinnedResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            pinned:
              type: boolean
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
    ListUnpinResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            pinned:
              type: boolean
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
    ListUpdateRequest:
      type: object
      properties:
        description:
          type: string
          minLength: 0
          maxLength: 100
        name:
          type: string
          minLength: 1
          maxLength: 25
        private:
          type: boolean
    ListUpdateResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            updated:
              type: boolean
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
    Media:
      type: object
      required:
        - type
      properties:
        height:
          "$ref": "#/components/schemas/MediaHeight"
        media_key:
          "$ref": "#/components/schemas/MediaKey"
        type:
          type: string
        width:
          "$ref": "#/components/schemas/MediaWidth"
      discriminator:
        propertyName: type
        mapping:
          animated_gif: "#/components/schemas/AnimatedGif"
          photo: "#/components/schemas/Photo"
          video: "#/components/schemas/Video"
    MediaHeight:
      type: integer
      description: The height of the media in pixels.
      minimum: 0
    MediaId:
      type: string
      description: The unique identifier of this Media.
      pattern: "^[0-9]{1,19}$"
      example: '1146654567674912769'
    MediaKey:
      type: string
      description: The Media Key identifier for this attachment.
      pattern: "^([0-9]+)_([0-9]+)$"
    MediaWidth:
      type: integer
      description: The width of the media in pixels.
      minimum: 0
    MentionEntity:
      allOf:
        - "$ref": "#/components/schemas/EntityIndicesInclusiveExclusive"
        - "$ref": "#/components/schemas/MentionFields"
    MentionFields:
      type: object
      description: Represent the portion of text recognized as a User mention, and
        its start and end position within the text.
      required:
        - username
      properties:
        id:
          "$ref": "#/components/schemas/UserId"
        username:
          "$ref": "#/components/schemas/UserName"
    MuteUserMutationResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            muting:
              type: boolean
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
    MuteUserRequest:
      type: object
      required:
        - target_user_id
      properties:
        target_user_id:
          "$ref": "#/components/schemas/UserId"
    NewestId:
      type: string
      description: The newest id in this response.
    NextToken:
      type: string
      description: The next token.
      minLength: 1
    NonCompliantRulesProblem:
      description: A problem that indicates the user's rule set is not compliant.
      allOf:
        - "$ref": "#/components/schemas/Problem"
    Oauth1PermissionsProblem:
      description: A problem that indicates your client application does not have
        the required OAuth1 permissions for the requested endpoint.
      allOf:
        - "$ref": "#/components/schemas/Problem"
    OldestId:
      type: string
      description: The oldest id in this response.
    OperationalDisconnectProblem:
      description: You have been disconnected for operational reasons.
      allOf:
        - "$ref": "#/components/schemas/Problem"
        - type: object
          properties:
            disconnect_type:
              type: string
              enum:
                - OperationalDisconnect
                - UpstreamOperationalDisconnect
                - ForceDisconnect
                - UpstreamUncleanDisconnect
                - SlowReader
                - InternalError
                - ClientApplicationStateDegraded
                - InvalidRules
    PaginationToken32:
      type: string
      description: A base32 pagination token.
      minLength: 16
    PaginationToken36:
      type: string
      description: A base36 pagination token.
      minLength: 1
    PaginationTokenLong:
      type: string
      description: A 'long' pagination token.
      minLength: 1
      maxLength: 19
    Photo:
      allOf:
        - "$ref": "#/components/schemas/Media"
        - type: object
          properties:
            alt_text:
              type: string
            url:
              type: string
              format: uri
    Place:
      type: object
      required:
        - id
        - full_name
      properties:
        contained_within:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/PlaceId"
        country:
          type: string
          description: The full name of the county in which this place exists.
          example: United States
        country_code:
          "$ref": "#/components/schemas/CountryCode"
        full_name:
          type: string
          description: The full name of this place.
          example: Lakewood, CO
        geo:
          "$ref": "#/components/schemas/Geo"
        id:
          "$ref": "#/components/schemas/PlaceId"
        name:
          type: string
          description: The human readable name of this place.
          example: Lakewood
        place_type:
          "$ref": "#/components/schemas/PlaceType"
    PlaceId:
      type: string
      description: The identifier for this place.
      example: f7eb2fa2fea288b1
    PlaceType:
      type: string
      enum:
        - poi
        - neighborhood
        - city
        - admin
        - country
        - unknown
      example: city
    Point:
      type: object
      description: A [GeoJson Point](https://tools.ietf.org/html/rfc7946#section-3.1.2)
        geometry object.
      required:
        - type
        - coordinates
      properties:
        coordinates:
          "$ref": "#/components/schemas/Position"
        type:
          type: string
          enum:
            - Point
          example: Point
    Poll:
      type: object
      description: Represent a Poll attached to a Tweet.
      required:
        - id
        - options
      properties:
        duration_minutes:
          type: integer
          minimum: 5
          maximum: 10080
          format: int32
        end_datetime:
          type: string
          format: date-time
        id:
          "$ref": "#/components/schemas/PollId"
        options:
          type: array
          minItems: 2
          maxItems: 4
          items:
            "$ref": "#/components/schemas/PollOption"
        voting_status:
          type: string
          enum:
            - open
            - closed
    PollId:
      type: string
      description: Unique identifier of this poll.
      pattern: "^[0-9]{1,19}$"
      example: '1365059861688410112'
    PollOption:
      type: object
      description: Describes a choice in a Poll object.
      required:
        - position
        - label
        - votes
      properties:
        label:
          "$ref": "#/components/schemas/PollOptionLabel"
        position:
          type: integer
          description: Position of this choice in the poll.
        votes:
          type: integer
          description: Number of users who voted for this choice.
    PollOptionLabel:
      type: string
      description: The text of a poll choice.
      minLength: 1
      maxLength: 25
    Position:
      type: array
      description: A [GeoJson Position](https://tools.ietf.org/html/rfc7946#section-3.1.1)
        in the format `[longitude,latitude]`.
      minItems: 2
      maxItems: 2
      items:
        type: number
      example:
        - -105.18816086351444
        - 40.247749999999996
    PreviousToken:
      type: string
      description: The previous token.
      minLength: 1
    Problem:
      type: object
      description: An HTTP Problem Details object, as defined in IETF RFC 7807 (https://tools.ietf.org/html/rfc7807).
      required:
        - type
        - title
      properties:
        detail:
          type: string
        status:
          type: integer
        title:
          type: string
        type:
          type: string
      discriminator:
        propertyName: type
        mapping:
          about:blank: "#/components/schemas/GenericProblem"
          https://api.twitter.com/2/problems/client-disconnected: "#/components/schemas/ClientDisconnectedProblem"
          https://api.twitter.com/2/problems/client-forbidden: "#/components/schemas/ClientForbiddenProblem"
          https://api.twitter.com/2/problems/conflict: "#/components/schemas/ConflictProblem"
          https://api.twitter.com/2/problems/disallowed-resource: "#/components/schemas/DisallowedResourceProblem"
          https://api.twitter.com/2/problems/duplicate-rules: "#/components/schemas/DuplicateRuleProblem"
          https://api.twitter.com/2/problems/invalid-request: "#/components/schemas/InvalidRequestProblem"
          https://api.twitter.com/2/problems/invalid-rules: "#/components/schemas/InvalidRuleProblem"
          https://api.twitter.com/2/problems/noncompliant-rules: "#/components/schemas/NonCompliantRulesProblem"
          https://api.twitter.com/2/problems/not-authorized-for-field: "#/components/schemas/FieldUnauthorizedProblem"
          https://api.twitter.com/2/problems/not-authorized-for-resource: "#/components/schemas/ResourceUnauthorizedProblem"
          https://api.twitter.com/2/problems/oauth1-permissions: "#/components/schemas/Oauth1PermissionsProblem"
          https://api.twitter.com/2/problems/operational-disconnect: "#/components/schemas/OperationalDisconnectProblem"
          https://api.twitter.com/2/problems/resource-not-found: "#/components/schemas/ResourceNotFoundProblem"
          https://api.twitter.com/2/problems/resource-unavailable: "#/components/schemas/ResourceUnavailableProblem"
          https://api.twitter.com/2/problems/rule-cap: "#/components/schemas/RulesCapProblem"
          https://api.twitter.com/2/problems/streaming-connection: "#/components/schemas/ConnectionExceptionProblem"
          https://api.twitter.com/2/problems/unsupported-authentication: "#/components/schemas/UnsupportedAuthenticationProblem"
          https://api.twitter.com/2/problems/usage-capped: "#/components/schemas/UsageCapExceededProblem"
    ReplySettings:
      type: string
      description: Shows who can reply a Tweet. Fields returned are everyone, mentioned_users,
        and following.
      pattern: "^[A-Za-z]{1,12}$"
      enum:
        - everyone
        - mentionedUsers
        - following
        - other
    ResourceNotFoundProblem:
      description: A problem that indicates that a given Tweet, User, etc. does not
        exist.
      allOf:
        - "$ref": "#/components/schemas/Problem"
        - type: object
          required:
            - parameter
            - value
            - resource_id
            - resource_type
          properties:
            parameter:
              type: string
              minLength: 1
            resource_id:
              type: string
            resource_type:
              type: string
              enum:
                - user
                - tweet
                - media
                - list
                - space
            value:
              type: string
              description: Value will match the schema of the field.
    ResourceUnauthorizedProblem:
      description: A problem that indicates you are not allowed to see a particular
        Tweet, User, etc.
      allOf:
        - "$ref": "#/components/schemas/Problem"
        - type: object
          required:
            - value
            - resource_id
            - resource_type
            - section
            - parameter
          properties:
            parameter:
              type: string
            resource_id:
              type: string
            resource_type:
              type: string
              enum:
                - user
                - tweet
                - media
                - list
                - space
            section:
              type: string
              enum:
                - data
                - includes
            value:
              type: string
    ResourceUnavailableProblem:
      description: A problem that indicates a particular Tweet, User, etc. is not
        available to you.
      allOf:
        - "$ref": "#/components/schemas/Problem"
        - type: object
          required:
            - parameter
            - resource_id
            - resource_type
          properties:
            parameter:
              type: string
              minLength: 1
            resource_id:
              type: string
            resource_type:
              type: string
              enum:
                - user
                - tweet
                - media
                - list
                - space
    ResultCount:
      type: integer
      description: The number of results returned in this response.
      format: int32
    Rule:
      type: object
      description: A user-provided stream filtering rule.
      required:
        - value
      properties:
        id:
          "$ref": "#/components/schemas/RuleId"
        tag:
          "$ref": "#/components/schemas/RuleTag"
        value:
          "$ref": "#/components/schemas/RuleValue"
    RuleId:
      type: string
      description: Unique identifier of this rule.
      pattern: "^[0-9]{1,19}$"
      example: '120897978112909812'
    RuleNoId:
      type: object
      description: A user-provided stream filtering rule.
      required:
        - value
      properties:
        tag:
          "$ref": "#/components/schemas/RuleTag"
        value:
          "$ref": "#/components/schemas/RuleValue"
    RuleTag:
      type: string
      description: A tag meant for the labeling of user provided rules.
      example: Non-retweeted coffee Tweets
    RuleValue:
      type: string
      description: The filterlang value of the rule.
      example: coffee -is:retweet
    RulesCapProblem:
      description: You have exceeded the maximum number of rules.
      allOf:
        - "$ref": "#/components/schemas/Problem"
    RulesLookupResponse:
      type: object
      required:
        - meta
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/Rule"
        meta:
          "$ref": "#/components/schemas/RulesResponseMetadata"
    RulesRequestSummary:
      oneOf:
        - type: object
          description: A summary of the results of the addition of user-specified stream
            filtering rules.
          required:
            - created
            - not_created
            - valid
            - invalid
          properties:
            created:
              type: integer
              description: Number of user-specified stream filtering rules that were
                created.
              format: int32
              example: 1
            invalid:
              type: integer
              description: Number of invalid user-specified stream filtering rules.
              format: int32
              example: 1
            not_created:
              type: integer
              description: Number of user-specified stream filtering rules that were
                not created.
              format: int32
              example: 1
            valid:
              type: integer
              description: Number of valid user-specified stream filtering rules.
              format: int32
              example: 1
        - type: object
          required:
            - deleted
            - not_deleted
          properties:
            deleted:
              type: integer
              description: Number of user-specified stream filtering rules that were
                deleted.
              format: int32
            not_deleted:
              type: integer
              description: Number of user-specified stream filtering rules that were
                not deleted.
              format: int32
    RulesResponseMetadata:
      type: object
      required:
        - sent
      properties:
        next_token:
          "$ref": "#/components/schemas/NextToken"
        result_count:
          type: integer
          description: Number of Rules in result set.
          format: int32
        sent:
          type: string
        summary:
          "$ref": "#/components/schemas/RulesRequestSummary"
    SearchCount:
      type: object
      description: Represent a Search Count Result.
      required:
        - end
        - start
        - tweet_count
      properties:
        end:
          "$ref": "#/components/schemas/End"
        start:
          "$ref": "#/components/schemas/Start"
        tweet_count:
          "$ref": "#/components/schemas/TweetCount"
    Space:
      type: object
      description: ''
      required:
        - id
        - state
      properties:
        created_at:
          type: string
          description: Creation time of the Space.
          format: date-time
          example: '2021-07-06T18:40:40.000Z'
        creator_id:
          "$ref": "#/components/schemas/UserId"
        ended_at:
          type: string
          description: End time of the Space.
          format: date-time
          example: '2021-07-06T18:40:40.000Z'
        host_ids:
          type: array
          description: The user ids for the hosts of the Space.
          items:
            "$ref": "#/components/schemas/UserId"
        id:
          "$ref": "#/components/schemas/SpaceId"
        invited_user_ids:
          type: array
          description: An array of user ids for people who were invited to a Space.
          items:
            "$ref": "#/components/schemas/UserId"
        is_ticketed:
          type: boolean
          description: Denotes if the Space is a ticketed Space.
          example: 'false'
        lang:
          type: string
          description: The language of the Space.
          example: en
        participant_count:
          type: integer
          description: The number of participants in a Space.
          format: int32
          example: 10
        scheduled_start:
          type: string
          description: A date time stamp for when a Space is scheduled to begin.
          format: date-time
          example: '2021-07-06T18:40:40.000Z'
        speaker_ids:
          type: array
          description: An array of user ids for people who were speakers in a Space.
          items:
            "$ref": "#/components/schemas/UserId"
        started_at:
          type: string
          description: When the Space was started as a date string.
          format: date-time
          example: '2021-7-14T04:35:55Z'
        state:
          type: string
          description: The current state of the Space.
          enum:
            - live
            - scheduled
            - ended
          example: live
        subscriber_count:
          type: integer
          description: The number of people who have either purchased a ticket or
            set a reminder for this Space.
          format: int32
          example: 10
        title:
          type: string
          description: The title of the Space.
          example: Spaces are Awesome
        topics:
          type: array
          description: The topics of a Space, as selected by its creator.
          items:
            type: object
            description: The Twitter Topic object.
            required:
              - id
              - name
            properties:
              description:
                type: string
                description: The description of the given topic.
              id:
                type: string
                description: An ID suitable for use in the REST API.
              name:
                type: string
                description: The name of the given topic.
            example:
              description: All about technology
              id: '848920371311001600'
              name: Technology
        updated_at:
          type: string
          description: When the Space was last updated.
          format: date-time
          example: '2021-7-14T04:35:55Z'
    SpaceId:
      type: string
      description: The unique identifier of this Space.
      pattern: "^[a-zA-Z0-9]{1,13}$"
      example: 1SLjjRYNejbKM
    Start:
      type: string
      description: The start time of the bucket.
      format: date-time
    StreamingTweetResponse:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/Tweet"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
        includes:
          "$ref": "#/components/schemas/Expansions"
    Topic:
      type: object
      description: The topic of a Space, as selected by its creator.
      required:
        - id
        - name
      properties:
        description:
          type: string
          description: The description of the given topic.
          example: All about technology
        id:
          "$ref": "#/components/schemas/TopicId"
        name:
          type: string
          description: The name of the given topic.
          example: Technology
    TopicId:
      type: string
      description: Unique identifier of this Topic.
    Tweet:
      type: object
      properties:
        author_id:
          "$ref": "#/components/schemas/UserId"
        created_at:
          type: string
          description: Creation time of the Tweet.
          format: date-time
          example: '2021-01-06T18:40:40.000Z'
        text:
          "$ref": "#/components/schemas/TweetText"
    TweetComplianceData:
      description: Tweet compliance data.
      oneOf:
        - "$ref": "#/components/schemas/TweetDeleteComplianceSchema"
        - "$ref": "#/components/schemas/TweetWithheldComplianceSchema"
        - "$ref": "#/components/schemas/TweetDropComplianceSchema"
        - "$ref": "#/components/schemas/TweetUndropComplianceSchema"
        - "$ref": "#/components/schemas/TweetEditComplianceSchema"
    TweetComplianceSchema:
      type: object
      required:
        - tweet
        - event_at
      properties:
        event_at:
          type: string
          description: Event time.
          format: date-time
          example: '2021-07-06T18:40:40.000Z'
        quote_tweet_id:
          "$ref": "#/components/schemas/TweetId"
        tweet:
          type: object
          required:
            - id
            - author_id
          properties:
            author_id:
              "$ref": "#/components/schemas/UserId"
            id:
              "$ref": "#/components/schemas/TweetId"
    TweetComplianceStreamResponse:
      description: Tweet compliance stream events.
      oneOf:
        - type: object
          description: Compliance event.
          required:
            - data
          properties:
            data:
              "$ref": "#/components/schemas/TweetComplianceData"
        - type: object
          required:
            - errors
          properties:
            errors:
              type: array
              minItems: 1
              items:
                "$ref": "#/components/schemas/Problem"
    TweetCount:
      type: integer
      description: The count for the bucket.
    TweetCreateRequest:
      type: object
      properties:
        card_uri:
          type: string
          description: Card Uri Parameter. This is mutually exclusive from Quote Tweet
            Id, Poll, Media, and Direct Message Deep Link.
        direct_message_deep_link:
          type: string
          description: Link to take the conversation from the public timeline to a
            private Direct Message.
        for_super_followers_only:
          type: boolean
          description: Exclusive Tweet for super followers.
          default: false
        geo:
          type: object
          description: Place ID being attached to the Tweet for geo location.
          properties:
            place_id:
              type: string
          additionalProperties: false
        media:
          type: object
          description: Media information being attached to created Tweet. This is
            mutually exclusive from Quote Tweet Id, Poll, and Card URI.
          required:
            - media_ids
          properties:
            media_ids:
              type: array
              description: A list of Media Ids to be attached to a created Tweet.
              minItems: 1
              maxItems: 4
              items:
                "$ref": "#/components/schemas/MediaId"
            tagged_user_ids:
              type: array
              description: A list of User Ids to be tagged in the media for created
                Tweet.
              minItems: 0
              maxItems: 10
              items:
                "$ref": "#/components/schemas/UserId"
          additionalProperties: false
        nullcast:
          type: boolean
          description: Nullcasted (promoted-only) Tweets do not appear in the public
            timeline and are not served to followers.
          default: false
        poll:
          type: object
          description: Poll options for a Tweet with a poll. This is mutually exclusive
            from Media, Quote Tweet Id, and Card URI.
          required:
            - options
            - duration_minutes
          properties:
            duration_minutes:
              type: integer
              description: Duration of the poll in minutes.
              minimum: 5
              maximum: 10080
              format: int32
            options:
              type: array
              minItems: 2
              maxItems: 4
              items:
                type: string
                description: The text of a poll choice.
                minLength: 1
                maxLength: 25
            reply_settings:
              type: string
              description: Settings to indicate who can reply to the Tweet.
              enum:
                - following
                - mentionedUsers
          additionalProperties: false
        quote_tweet_id:
          "$ref": "#/components/schemas/TweetId"
        reply:
          type: object
          description: Tweet information of the Tweet being replied to.
          required:
            - in_reply_to_tweet_id
          properties:
            exclude_reply_user_ids:
              type: array
              description: A list of User Ids to be excluded from the reply Tweet.
              items:
                "$ref": "#/components/schemas/UserId"
            in_reply_to_tweet_id:
              "$ref": "#/components/schemas/TweetId"
          additionalProperties: false
        reply_settings:
          type: string
          description: Settings to indicate who can reply to the Tweet.
          enum:
            - following
            - mentionedUsers
        text:
          "$ref": "#/components/schemas/TweetText"
      additionalProperties: false
    TweetCreateResponse:
      type: object
      properties:
        data:
          type: object
          required:
            - id
            - text
          properties:
            id:
              "$ref": "#/components/schemas/TweetId"
            text:
              "$ref": "#/components/schemas/TweetText"
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
    TweetDeleteComplianceSchema:
      type: object
      required:
        - delete
      properties:
        delete:
          "$ref": "#/components/schemas/TweetComplianceSchema"
    TweetDeleteResponse:
      type: object
      properties:
        data:
          type: object
          required:
            - deleted
          properties:
            deleted:
              type: boolean
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
    TweetDropComplianceSchema:
      type: object
      required:
        - drop
      properties:
        drop:
          "$ref": "#/components/schemas/TweetComplianceSchema"
    TweetEditComplianceObjectSchema:
      type: object
      required:
        - tweet
        - event_at
        - initial_tweet_id
        - edit_tweet_ids
      properties:
        edit_tweet_ids:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/TweetId"
        event_at:
          type: string
          description: Event time.
          format: date-time
          example: '2021-07-06T18:40:40.000Z'
        initial_tweet_id:
          "$ref": "#/components/schemas/TweetId"
        tweet:
          type: object
          required:
            - id
          properties:
            id:
              "$ref": "#/components/schemas/TweetId"
    TweetEditComplianceSchema:
      type: object
      required:
        - tweet_edit
      properties:
        tweet_edit:
          "$ref": "#/components/schemas/TweetEditComplianceObjectSchema"
    TweetHideRequest:
      type: object
      required:
        - hidden
      properties:
        hidden:
          type: boolean
    TweetHideResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            hidden:
              type: boolean
    TweetId:
      type: string
      description: Unique identifier of this Tweet. This is returned as a string in
        order to avoid complications with languages and tools that cannot handle large
        integers.
      pattern: "^[0-9]{1,19}$"
      example: '1346889436626259968'
    TweetLabelData:
      description: Tweet label data.
      oneOf:
        - "$ref": "#/components/schemas/TweetNoticeSchema"
        - "$ref": "#/components/schemas/TweetUnviewableSchema"
    TweetLabelStreamResponse:
      description: Tweet label stream events.
      oneOf:
        - type: object
          description: Tweet Label event.
          required:
            - data
          properties:
            data:
              "$ref": "#/components/schemas/TweetLabelData"
        - type: object
          required:
            - errors
          properties:
            errors:
              type: array
              minItems: 1
              items:
                "$ref": "#/components/schemas/Problem"
    TweetNotice:
      type: object
      required:
        - tweet
        - event_type
        - event_at
        - application
      properties:
        application:
          type: string
          description: If the label is being applied or removed. Possible values are
            ‘apply’ or ‘remove’.
          example: apply
        details:
          type: string
          description: Information shown on the Tweet label
        event_at:
          type: string
          description: Event time.
          format: date-time
          example: '2021-07-06T18:40:40.000Z'
        event_type:
          type: string
          description: The type of label on the Tweet
          example: misleading
        extended_details_url:
          type: string
          description: Link to more information about this kind of label
        label_title:
          type: string
          description: Title/header of the Tweet label
        tweet:
          type: object
          required:
            - id
            - author_id
          properties:
            author_id:
              "$ref": "#/components/schemas/UserId"
            id:
              "$ref": "#/components/schemas/TweetId"
    TweetNoticeSchema:
      type: object
      required:
        - public_tweet_notice
      properties:
        public_tweet_notice:
          "$ref": "#/components/schemas/TweetNotice"
    TweetTakedownComplianceSchema:
      type: object
      required:
        - tweet
        - withheld_in_countries
        - event_at
      properties:
        event_at:
          type: string
          description: Event time.
          format: date-time
          example: '2021-07-06T18:40:40.000Z'
        quote_tweet_id:
          "$ref": "#/components/schemas/TweetId"
        tweet:
          type: object
          required:
            - id
            - author_id
          properties:
            author_id:
              "$ref": "#/components/schemas/UserId"
            id:
              "$ref": "#/components/schemas/TweetId"
        withheld_in_countries:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/CountryCode"
    TweetText:
      type: string
      description: The content of the Tweet.
      example: Learn how to use the user Tweet timeline and user mention timeline
        endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
    TweetUndropComplianceSchema:
      type: object
      required:
        - undrop
      properties:
        undrop:
          "$ref": "#/components/schemas/TweetComplianceSchema"
    TweetUnviewable:
      type: object
      required:
        - tweet
        - event_at
        - application
      properties:
        application:
          type: string
          description: If the label is being applied or removed. Possible values are
            ‘apply’ or ‘remove’.
          example: apply
        event_at:
          type: string
          description: Event time.
          format: date-time
          example: '2021-07-06T18:40:40.000Z'
        tweet:
          type: object
          required:
            - id
            - author_id
          properties:
            author_id:
              "$ref": "#/components/schemas/UserId"
            id:
              "$ref": "#/components/schemas/TweetId"
    TweetUnviewableSchema:
      type: object
      required:
        - public_tweet_unviewable
      properties:
        public_tweet_unviewable:
          "$ref": "#/components/schemas/TweetUnviewable"
    TweetWithheld:
      type: object
      description: Indicates withholding details for [withheld content](https://help.twitter.com/en/rules-and-policies/tweet-withheld-by-country).
      required:
        - copyright
        - country_codes
      properties:
        copyright:
          type: boolean
          description: Indicates if the content is being withheld for on the basis
            of copyright infringement.
        country_codes:
          type: array
          description: Provides a list of countries where this content is not available.
          minItems: 1
          uniqueItems: true
          items:
            "$ref": "#/components/schemas/CountryCode"
        scope:
          type: string
          description: Indicates whether the content being withheld is the `tweet`
            or a `user`.
          enum:
            - tweet
            - user
    TweetWithheldComplianceSchema:
      type: object
      required:
        - withheld
      properties:
        withheld:
          "$ref": "#/components/schemas/TweetTakedownComplianceSchema"
    UnsupportedAuthenticationProblem:
      description: A problem that indicates that the authentication used is not supported.
      allOf:
        - "$ref": "#/components/schemas/Problem"
    UploadExpiration:
      type: string
      description: Expiration time of the upload URL.
      format: date-time
      example: '2021-01-06T18:40:40.000Z'
    UploadUrl:
      type: string
      description: URL to which the user will upload their Tweet or user IDs.
      format: uri
    Url:
      type: string
      description: A validly formatted URL.
      format: uri
      example: https://developer.twitter.com/en/docs/twitter-api
    UrlEntity:
      description: Represent the portion of text recognized as a URL, and its start
        and end position within the text.
      allOf:
        - "$ref": "#/components/schemas/EntityIndicesInclusiveExclusive"
        - "$ref": "#/components/schemas/UrlFields"
    UrlFields:
      type: object
      description: Represent the portion of text recognized as a URL.
      required:
        - url
      properties:
        description:
          type: string
          description: Description of the URL landing page.
          example: This is a description of the website.
        display_url:
          type: string
          description: The URL as displayed in the Twitter client.
          example: twittercommunity.com/t/introducing-…
        expanded_url:
          "$ref": "#/components/schemas/Url"
        images:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/UrlImage"
        media_key:
          "$ref": "#/components/schemas/MediaKey"
        status:
          "$ref": "#/components/schemas/HttpStatusCode"
        title:
          type: string
          description: Title of the page the URL points to.
          example: Introducing the v2 follow lookup endpoints
        unwound_url:
          type: string
          description: Fully resolved url.
          format: uri
          example: https://twittercommunity.com/t/introducing-the-v2-follow-lookup-endpoints/147118
        url:
          "$ref": "#/components/schemas/Url"
    UrlImage:
      type: object
      description: Represent the information for the URL image.
      properties:
        height:
          "$ref": "#/components/schemas/MediaHeight"
        url:
          "$ref": "#/components/schemas/Url"
        width:
          "$ref": "#/components/schemas/MediaWidth"
    UsageCapExceededProblem:
      description: A problem that indicates that a usage cap has been exceeded.
      allOf:
        - "$ref": "#/components/schemas/Problem"
        - type: object
          properties:
            period:
              type: string
              enum:
                - Daily
                - Monthly
            scope:
              type: string
              enum:
                - Account
                - Product
    User:
      type: object
      description: The Twitter User object.
      required:
        - id
        - name
        - username
      properties:
        created_at:
          type: string
          description: Creation time of this User.
          format: date-time
        description:
          type: string
          description: The text of this User's profile description (also known as
            bio), if the User provided one.
        entities:
          type: object
          description: A list of metadata found in the User's profile description.
          properties:
            description:
              "$ref": "#/components/schemas/FullTextEntities"
            url:
              type: object
              description: Expanded details for the URL specified in the User's profile,
                with start and end indices.
              properties:
                urls:
                  type: array
                  minItems: 1
                  items:
                    "$ref": "#/components/schemas/UrlEntity"
        id:
          "$ref": "#/components/schemas/UserId"
        location:
          type: string
          description: The location specified in the User's profile, if the User provided
            one. As this is a freeform value, it may not indicate a valid location,
            but it may be fuzzily evaluated when performing searches with location
            queries.
        name:
          type: string
          description: The friendly name of this User, as shown on their profile.
        pinned_tweet_id:
          "$ref": "#/components/schemas/TweetId"
        profile_image_url:
          type: string
          description: The URL to the profile image for this User.
          format: uri
        protected:
          type: boolean
          description: Indicates if this User has chosen to protect their Tweets (in
            other words, if this User's Tweets are private).
        public_metrics:
          type: object
          description: A list of metrics for this User.
          required:
            - followers_count
            - following_count
            - tweet_count
            - listed_count
          properties:
            followers_count:
              type: integer
              description: Number of Users who are following this User.
            following_count:
              type: integer
              description: Number of Users this User is following.
            listed_count:
              type: integer
              description: The number of lists that include this User.
            tweet_count:
              type: integer
              description: The number of Tweets (including Retweets) posted by this
                User.
        url:
          type: string
          description: The URL specified in the User's profile.
        username:
          "$ref": "#/components/schemas/UserName"
        verified:
          type: boolean
          description: Indicate if this User is a verified Twitter User.
        verified_type:
          type: string
          description: 'The Twitter Blue verified type of the user, eg: blue, government,
            business or none.'
        withheld:
          "$ref": "#/components/schemas/UserWithheld"
      example:
        created_at: '2013-12-14T04:35:55Z'
        id: '2244994945'
        name: Twitter Dev
        protected: false
        username: TwitterDev
    UserComplianceData:
      description: User compliance data.
      oneOf:
        - "$ref": "#/components/schemas/UserProtectComplianceSchema"
        - "$ref": "#/components/schemas/UserUnprotectComplianceSchema"
        - "$ref": "#/components/schemas/UserDeleteComplianceSchema"
        - "$ref": "#/components/schemas/UserUndeleteComplianceSchema"
        - "$ref": "#/components/schemas/UserSuspendComplianceSchema"
        - "$ref": "#/components/schemas/UserUnsuspendComplianceSchema"
        - "$ref": "#/components/schemas/UserWithheldComplianceSchema"
        - "$ref": "#/components/schemas/UserScrubGeoSchema"
        - "$ref": "#/components/schemas/UserProfileModificationComplianceSchema"
    UserComplianceSchema:
      type: object
      required:
        - user
        - event_at
      properties:
        event_at:
          type: string
          description: Event time.
          format: date-time
          example: '2021-07-06T18:40:40.000Z'
        user:
          type: object
          required:
            - id
          properties:
            id:
              "$ref": "#/components/schemas/UserId"
    UserComplianceStreamResponse:
      description: User compliance stream events.
      oneOf:
        - type: object
          description: User compliance event.
          required:
            - data
          properties:
            data:
              "$ref": "#/components/schemas/UserComplianceData"
        - type: object
          required:
            - errors
          properties:
            errors:
              type: array
              minItems: 1
              items:
                "$ref": "#/components/schemas/Problem"
    UserDeleteComplianceSchema:
      type: object
      required:
        - user_delete
      properties:
        user_delete:
          "$ref": "#/components/schemas/UserComplianceSchema"
    UserId:
      type: string
      description: Unique identifier of this User. This is returned as a string in
        order to avoid complications with languages and tools that cannot handle large
        integers.
      pattern: "^[0-9]{1,19}$"
      example: '2244994945'
    UserIdMatchesAuthenticatedUser:
      type: string
      description: Unique identifier of this User. The value must be the same as the
        authenticated user.
      example: '2244994945'
    UserName:
      type: string
      description: The Twitter handle (screen name) of this user.
      pattern: "^[A-Za-z0-9_]{1,15}$"
    UserProfileModificationComplianceSchema:
      type: object
      required:
        - user_profile_modification
      properties:
        user_profile_modification:
          "$ref": "#/components/schemas/UserProfileModificationObjectSchema"
    UserProfileModificationObjectSchema:
      type: object
      required:
        - user
        - profile_field
        - new_value
        - event_at
      properties:
        event_at:
          type: string
          description: Event time.
          format: date-time
          example: '2021-07-06T18:40:40.000Z'
        new_value:
          type: string
        profile_field:
          type: string
        user:
          type: object
          required:
            - id
          properties:
            id:
              "$ref": "#/components/schemas/UserId"
    UserProtectComplianceSchema:
      type: object
      required:
        - user_protect
      properties:
        user_protect:
          "$ref": "#/components/schemas/UserComplianceSchema"
    UserScrubGeoObjectSchema:
      type: object
      required:
        - user
        - up_to_tweet_id
        - event_at
      properties:
        event_at:
          type: string
          description: Event time.
          format: date-time
          example: '2021-07-06T18:40:40.000Z'
        up_to_tweet_id:
          "$ref": "#/components/schemas/TweetId"
        user:
          type: object
          required:
            - id
          properties:
            id:
              "$ref": "#/components/schemas/UserId"
    UserScrubGeoSchema:
      type: object
      required:
        - scrub_geo
      properties:
        scrub_geo:
          "$ref": "#/components/schemas/UserScrubGeoObjectSchema"
    UserSuspendComplianceSchema:
      type: object
      required:
        - user_suspend
      properties:
        user_suspend:
          "$ref": "#/components/schemas/UserComplianceSchema"
    UserTakedownComplianceSchema:
      type: object
      required:
        - user
        - withheld_in_countries
        - event_at
      properties:
        event_at:
          type: string
          description: Event time.
          format: date-time
          example: '2021-07-06T18:40:40.000Z'
        user:
          type: object
          required:
            - id
          properties:
            id:
              "$ref": "#/components/schemas/UserId"
        withheld_in_countries:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/CountryCode"
    UserUndeleteComplianceSchema:
      type: object
      required:
        - user_undelete
      properties:
        user_undelete:
          "$ref": "#/components/schemas/UserComplianceSchema"
    UserUnprotectComplianceSchema:
      type: object
      required:
        - user_unprotect
      properties:
        user_unprotect:
          "$ref": "#/components/schemas/UserComplianceSchema"
    UserUnsuspendComplianceSchema:
      type: object
      required:
        - user_unsuspend
      properties:
        user_unsuspend:
          "$ref": "#/components/schemas/UserComplianceSchema"
    UserWithheld:
      type: object
      description: Indicates withholding details for [withheld content](https://help.twitter.com/en/rules-and-policies/tweet-withheld-by-country).
      required:
        - country_codes
      properties:
        country_codes:
          type: array
          description: Provides a list of countries where this content is not available.
          minItems: 1
          uniqueItems: true
          items:
            "$ref": "#/components/schemas/CountryCode"
        scope:
          type: string
          description: Indicates that the content being withheld is a `user`.
          enum:
            - user
    UserWithheldComplianceSchema:
      type: object
      required:
        - user_withheld
      properties:
        user_withheld:
          "$ref": "#/components/schemas/UserTakedownComplianceSchema"
    UsersFollowingCreateRequest:
      type: object
      required:
        - target_user_id
      properties:
        target_user_id:
          "$ref": "#/components/schemas/UserId"
    UsersFollowingCreateResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            following:
              type: boolean
            pending_follow:
              type: boolean
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
    UsersFollowingDeleteResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            following:
              type: boolean
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
    UsersLikesCreateRequest:
      type: object
      required:
        - tweet_id
      properties:
        tweet_id:
          "$ref": "#/components/schemas/TweetId"
    UsersLikesCreateResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            liked:
              type: boolean
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
    UsersLikesDeleteResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            liked:
              type: boolean
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
    UsersRetweetsCreateRequest:
      type: object
      required:
        - tweet_id
      properties:
        tweet_id:
          "$ref": "#/components/schemas/TweetId"
    UsersRetweetsCreateResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            retweeted:
              type: boolean
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
    UsersRetweetsDeleteResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            retweeted:
              type: boolean
        errors:
          type: array
          minItems: 1
          items:
            "$ref": "#/components/schemas/Problem"
    Variant:
      type: object
      properties:
        bit_rate:
          type: integer
          description: The bit rate of the media.
        content_type:
          type: string
          description: The content type of the media.
        url:
          type: string
          description: The url to the media.
          format: uri
    Variants:
      type: array
      description: An array of all available variants of the media.
      items:
        "$ref": "#/components/schemas/Variant"
    Video:
      allOf:
        - "$ref": "#/components/schemas/Media"
        - type: object
          properties:
            duration_ms:
              type: integer
            non_public_metrics:
              type: object
              description: Nonpublic engagement metrics for the Media at the time of
                the request.
              properties:
                playback_0_count:
                  type: integer
                  description: Number of users who made it through 0% of the video.
                  format: int32
                playback_100_count:
                  type: integer
                  description: Number of users who made it through 100% of the video.
                  format: int32
                playback_25_count:
                  type: integer
                  description: Number of users who made it through 25% of the video.
                  format: int32
                playback_50_count:
                  type: integer
                  description: Number of users who made it through 50% of the video.
                  format: int32
                playback_75_count:
                  type: integer
                  description: Number of users who made it through 75% of the video.
                  format: int32
            organic_metrics:
              type: object
              description: Organic nonpublic engagement metrics for the Media at the
                time of the request.
              properties:
                playback_0_count:
                  type: integer
                  description: Number of users who made it through 0% of the video.
                  format: int32
                playback_100_count:
                  type: integer
                  description: Number of users who made it through 100% of the video.
                  format: int32
                playback_25_count:
                  type: integer
                  description: Number of users who made it through 25% of the video.
                  format: int32
                playback_50_count:
                  type: integer
                  description: Number of users who made it through 50% of the video.
                  format: int32
                playback_75_count:
                  type: integer
                  description: Number of users who made it through 75% of the video.
                  format: int32
                view_count:
                  type: integer
                  description: Number of times this video has been viewed.
                  format: int32
            preview_image_url:
              type: string
              format: uri
            promoted_metrics:
              type: object
              description: Promoted nonpublic engagement metrics for the Media at the
                time of the request.
              properties:
                playback_0_count:
                  type: integer
                  description: Number of users who made it through 0% of the video.
                  format: int32
                playback_100_count:
                  type: integer
                  description: Number of users who made it through 100% of the video.
                  format: int32
                playback_25_count:
                  type: integer
                  description: Number of users who made it through 25% of the video.
                  format: int32
                playback_50_count:
                  type: integer
                  description: Number of users who made it through 50% of the video.
                  format: int32
                playback_75_count:
                  type: integer
                  description: Number of users who made it through 75% of the video.
                  format: int32
                view_count:
                  type: integer
                  description: Number of times this video has been viewed.
                  format: int32
            public_metrics:
              type: object
              description: Engagement metrics for the Media at the time of the request.
              properties:
                view_count:
                  type: integer
                  description: Number of times this video has been viewed.
                  format: int32
            variants:
              "$ref": "#/components/schemas/Variants"
  parameters:
    ComplianceJobFieldsParameter:
      name: compliance_job.fields
      in: query
      description: A comma separated list of ComplianceJob fields to display.
      required: false
      schema:
        type: array
        description: The fields available for a ComplianceJob object.
        minItems: 1
        uniqueItems: true
        items:
          type: string
          enum:
            - created_at
            - download_expires_at
            - download_url
            - id
            - name
            - resumable
            - status
            - type
            - upload_expires_at
            - upload_url
        example:
          - created_at
          - download_expires_at
          - download_url
          - id
          - name
          - resumable
          - status
          - type
          - upload_expires_at
          - upload_url
      explode: false
      style: form
    DmConversationFieldsParameter:
      name: dm_conversation.fields
      in: query
      description: A comma separated list of DmConversation fields to display.
      required: false
      schema:
        type: array
        description: The fields available for a DmConversation object.
        minItems: 1
        uniqueItems: true
        items:
          type: string
          enum:
            - id
        example:
          - id
      explode: false
      style: form
    DmEventExpansionsParameter:
      name: expansions
      in: query
      description: A comma separated list of fields to expand.
      schema:
        type: array
        description: The list of fields you can expand for a [DmEvent](#DmEvent) object.
          If the field has an ID, it can be expanded into a full object.
        minItems: 1
        uniqueItems: true
        items:
          type: string
          enum:
            - attachments.media_keys
            - participant_ids
            - referenced_tweets.id
            - sender_id
        example:
          - attachments.media_keys
          - participant_ids
          - referenced_tweets.id
          - sender_id
      explode: false
      style: form
    DmEventFieldsParameter:
      name: dm_event.fields
      in: query
      description: A comma separated list of DmEvent fields to display.
      required: false
      schema:
        type: array
        description: The fields available for a DmEvent object.
        minItems: 1
        uniqueItems: true
        items:
          type: string
          enum:
            - attachments
            - created_at
            - dm_conversation_id
            - event_type
            - id
            - participant_ids
            - referenced_tweets
            - sender_id
            - text
        example:
          - attachments
          - created_at
          - dm_conversation_id
          - event_type
          - id
          - participant_ids
          - referenced_tweets
          - sender_id
          - text
      explode: false
      style: form
    ListExpansionsParameter:
      name: expansions
      in: query
      description: A comma separated list of fields to expand.
      schema:
        type: array
        description: The list of fields you can expand for a [List](#List) object.
          If the field has an ID, it can be expanded into a full object.
        minItems: 1
        uniqueItems: true
        items:
          type: string
          enum:
            - owner_id
        example:
          - owner_id
      explode: false
      style: form
    ListFieldsParameter:
      name: list.fields
      in: query
      description: A comma separated list of List fields to display.
      required: false
      schema:
        type: array
        description: The fields available for a List object.
        minItems: 1
        uniqueItems: true
        items:
          type: string
          enum:
            - created_at
            - description
            - follower_count
            - id
            - member_count
            - name
            - owner_id
            - private
        example:
          - created_at
          - description
          - follower_count
          - id
          - member_count
          - name
          - owner_id
          - private
      explode: false
      style: form
    MediaFieldsParameter:
      name: media.fields
      in: query
      description: A comma separated list of Media fields to display.
      required: false
      schema:
        type: array
        description: The fields available for a Media object.
        minItems: 1
        uniqueItems: true
        items:
          type: string
          enum:
            - alt_text
            - duration_ms
            - height
            - media_key
            - non_public_metrics
            - organic_metrics
            - preview_image_url
            - promoted_metrics
            - public_metrics
            - type
            - url
            - variants
            - width
        example:
          - alt_text
          - duration_ms
          - height
          - media_key
          - non_public_metrics
          - organic_metrics
          - preview_image_url
          - promoted_metrics
          - public_metrics
          - type
          - url
          - variants
          - width
      explode: false
      style: form
    PlaceFieldsParameter:
      name: place.fields
      in: query
      description: A comma separated list of Place fields to display.
      required: false
      schema:
        type: array
        description: The fields available for a Place object.
        minItems: 1
        uniqueItems: true
        items:
          type: string
          enum:
            - contained_within
            - country
            - country_code
            - full_name
            - geo
            - id
            - name
            - place_type
        example:
          - contained_within
          - country
          - country_code
          - full_name
          - geo
          - id
          - name
          - place_type
      explode: false
      style: form
    PollFieldsParameter:
      name: poll.fields
      in: query
      description: A comma separated list of Poll fields to display.
      required: false
      schema:
        type: array
        description: The fields available for a Poll object.
        minItems: 1
        uniqueItems: true
        items:
          type: string
          enum:
            - duration_minutes
            - end_datetime
            - id
            - options
            - voting_status
        example:
          - duration_minutes
          - end_datetime
          - id
          - options
          - voting_status
      explode: false
      style: form
    SearchCountFieldsParameter:
      name: search_count.fields
      in: query
      description: A comma separated list of SearchCount fields to display.
      required: false
      schema:
        type: array
        description: The fields available for a SearchCount object.
        minItems: 1
        uniqueItems: true
        items:
          type: string
          enum:
            - end
            - start
            - tweet_count
        example:
          - end
          - start
          - tweet_count
      explode: false
      style: form
    SpaceExpansionsParameter:
      name: expansions
      in: query
      description: A comma separated list of fields to expand.
      schema:
        type: array
        description: The list of fields you can expand for a [Space](#Space) object.
          If the field has an ID, it can be expanded into a full object.
        minItems: 1
        uniqueItems: true
        items:
          type: string
          enum:
            - creator_id
            - host_ids
            - invited_user_ids
            - speaker_ids
            - topic_ids
        example:
          - creator_id
          - host_ids
          - invited_user_ids
          - speaker_ids
          - topic_ids
      explode: false
      style: form
    SpaceFieldsParameter:
      name: space.fields
      in: query
      description: A comma separated list of Space fields to display.
      required: false
      schema:
        type: array
        description: The fields available for a Space object.
        minItems: 1
        uniqueItems: true
        items:
          type: string
          enum:
            - created_at
            - creator_id
            - ended_at
            - host_ids
            - id
            - invited_user_ids
            - is_ticketed
            - lang
            - participant_count
            - scheduled_start
            - speaker_ids
            - started_at
            - state
            - subscriber_count
            - title
            - topic_ids
            - updated_at
        example:
          - created_at
          - creator_id
          - ended_at
          - host_ids
          - id
          - invited_user_ids
          - is_ticketed
          - lang
          - participant_count
          - scheduled_start
          - speaker_ids
          - started_at
          - state
          - subscriber_count
          - title
          - topic_ids
          - updated_at
      explode: false
      style: form
    TopicFieldsParameter:
      name: topic.fields
      in: query
      description: A comma separated list of Topic fields to display.
      required: false
      schema:
        type: array
        description: The fields available for a Topic object.
        minItems: 1
        uniqueItems: true
        items:
          type: string
          enum:
            - description
            - id
            - name
        example:
          - description
          - id
          - name
      explode: false
      style: form
    TweetExpansionsParameter:
      name: expansions
      in: query
      description: A comma separated list of fields to expand.
      schema:
        type: array
        description: The list of fields you can expand for a [Tweet](#Tweet) object.
          If the field has an ID, it can be expanded into a full object.
        minItems: 1
        uniqueItems: true
        items:
          type: string
          enum:
            - attachments.media_keys
            - attachments.poll_ids
            - author_id
            - edit_history_tweet_ids
            - entities.mentions.username
            - geo.place_id
            - in_reply_to_user_id
            - referenced_tweets.id
            - referenced_tweets.id.author_id
        example:
          - attachments.media_keys
          - attachments.poll_ids
          - author_id
          - edit_history_tweet_ids
          - entities.mentions.username
          - geo.place_id
          - in_reply_to_user_id
          - referenced_tweets.id
          - referenced_tweets.id.author_id
      explode: false
      style: form
    TweetFieldsParameter:
      name: tweet.fields
      in: query
      description: A comma separated list of Tweet fields to display.
      required: false
      schema:
        type: array
        description: The fields available for a Tweet object.
        minItems: 1
        uniqueItems: true
        items:
          type: string
          enum:
            - attachments
            - author_id
            - context_annotations
            - conversation_id
            - created_at
            - edit_controls
            - edit_history_tweet_ids
            - entities
            - geo
            - id
            - in_reply_to_user_id
            - lang
            - non_public_metrics
            - organic_metrics
            - possibly_sensitive
            - promoted_metrics
            - public_metrics
            - referenced_tweets
            - reply_settings
            - source
            - text
            - withheld
        example:
          - attachments
          - author_id
          - context_annotations
          - conversation_id
          - created_at
          - edit_controls
          - edit_history_tweet_ids
          - entities
          - geo
          - id
          - in_reply_to_user_id
          - lang
          - non_public_metrics
          - organic_metrics
          - possibly_sensitive
          - promoted_metrics
          - public_metrics
          - referenced_tweets
          - reply_settings
          - source
          - text
          - withheld
      explode: false
      style: form
    UserExpansionsParameter:
      name: expansions
      in: query
      description: A comma separated list of fields to expand.
      schema:
        type: array
        description: The list of fields you can expand for a [User](#User) object.
          If the field has an ID, it can be expanded into a full object.
        minItems: 1
        uniqueItems: true
        items:
          type: string
          enum:
            - pinned_tweet_id
        example:
          - pinned_tweet_id
      explode: false
      style: form
    UserFieldsParameter:
      name: user.fields
      in: query
      description: A comma separated list of User fields to display.
      required: false
      schema:
        type: array
        description: The fields available for a User object.
        minItems: 1
        uniqueItems: true
        items:
          type: string
          enum:
            - created_at
            - description
            - entities
            - id
            - location
            - name
            - pinned_tweet_id
            - profile_image_url
            - protected
            - public_metrics
            - url
            - username
            - verified
            - verified_type
            - withheld
        example:
          - created_at
          - description
          - entities
          - id
          - location
          - name
          - pinned_tweet_id
          - profile_image_url
          - protected
          - public_metrics
          - url
          - username
          - verified
          - verified_type
          - withheld
      explode: false
      style: form